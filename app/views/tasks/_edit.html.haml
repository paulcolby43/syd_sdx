.text-center
  %strong= task['Company']
  %br
  -#
    = "Service Request #{task['WorkOrderNumber']}"
    %br
  = task_type_string(task['InternalTaskType'])
  %br
  = task['CustomerAddressName']
  %br
  %a{href: "http://maps.google.com/?saddr=Current%20Location&daddr=#{URI.encode(task['FromLocation'])}", target: '_blank'}
    = simple_format(Task.full_address(task), {}, wrapper_tag: "div")
  -#
    - unless task['FromLocation'].blank?
      %a{href: "http://maps.google.com/?saddr=Current%20Location&daddr=#{URI.encode(task['FromLocation'])}", target: '_blank'}
        = "#{task['FromLocation']}"
    - else
      %a{href: "http://maps.google.com/?saddr=Current%20Location&daddr=#{URI.encode('7100 30th Ave N')}", target: '_blank'}
        7100 30th Ave N
    %br
  - unless workorder.blank? or workorder['Contact'].blank?
    = workorder['Contact']
  - unless task['CustomerPhone'].blank?
    %a{href: "tel:#{task['CustomerPhone']}"}
      = task['CustomerPhone']

%ul.nav.nav-tabs
  
  - if task['InternalTaskType'] == '0' or task['InternalTaskType'] == '1'
    %li.active
      %a{:href => "#trip_#{task['DispatchTripId']}_task_#{task['Id']}_containers", :data => {:toggle => "tab"}}
        Container
  %li{class: "#{task['InternalTaskType'] == '0' or task['InternalTaskType'] == '1' ? '' : 'active'}"}
    %a{:href => "#trip_#{task['DispatchTripId']}_task_#{task['Id']}_details", :data => {:toggle => "tab"}}
      Details
  - if task['InternalTaskType'] == '1'
    %li
      %a{:href => "#trip_#{task['DispatchTripId']}_task_#{task['Id']}_signature", :data => {:toggle => "tab"}}
        Signature
  -#
    %li
      %a{:href => "#trip_#{task['DispatchTripId']}_task_#{task['Id']}_images", :data => {:toggle => "tab"}}
        Images
.tab-content
  .tab-pane{:id => "trip_#{task['DispatchTripId']}_task_#{task['Id']}_details", class: "#{task['InternalTaskType'] == '0' or task['InternalTaskType'] == '1' ? '' : 'active'}"}
    %br
    -#
      %div
        %strong= "Customer:"
        .pull-right
          = task['Customer']
        %br
        %strong= "At:"
        .pull-right
          - unless task['ToLocation'].blank?
            %a{href: "http://maps.google.com/?saddr=Current%20Location&daddr=#{URI.encode(task['ToLocation'])}", target: '_blank'}
              %i.fa.fa-map
              = "#{task['ToLocation']}"
          - else
            %a{href: "http://maps.google.com/?saddr=Current%20Location&daddr=#{URI.encode('7100 30th Ave N')}", target: '_blank'}
              7100 30th Ave N
        %br
        %strong= "Phone:"
        .pull-right
          - unless workorder.blank? or workorder['Phone'].blank?
            %a{href: "tel:#{workorder['Phone']}"}
              = workorder['Phone']
    %div
      = form_tag task_path(task["Id"]), method: 'put', remote: true, :class => "form-horizontal", id: 'task_form' do
        =# hidden_field_tag "task[trip_id]", task['DispatchTripId']
        = hidden_field_tag "task[id]", task['Id']
        %div
          %a{href: nil, onclick: "$('#mileage_task_#{task['Id']}').toggle(); $('#plus_mileage_task_#{task['Id']}').toggle(); $('#minus_mileage_task_#{task['Id']}').toggle();"} 
            %i.fa.fa-plus{id: "plus_mileage_task_#{task['Id']}"}
            %i.fa.fa-minus{id: "minus_mileage_task_#{task['Id']}", style: 'display:none;'}
            Mileage
        .row.form-group{id: "mileage_task_#{task['Id']}", style: 'display:none;'}
          %div{:class => "col-xs-6"}
            = label_tag "Start Mileage", nil, :class => 'control-label'
            = text_field_tag "task[starting_mileage]", task['StartingMileage'], :placeholder => "Start Mileage", class: "form-control input-lg"
          %div{:class => "col-xs-6"}
            = label_tag "End Mileage", nil, :class => 'control-label'
            = text_field_tag "task[ending_mileage]", task['EndingMileage'], :placeholder => "End Mileage", class: "form-control input-lg"
        %br
        -#
          .row.form-group
            %div{:class => "col-xs-6"}
              = label_tag "Start Mileage", nil, :class => 'control-label'
              = text_field_tag "task[starting_mileage]", task['StartingMileage'], :placeholder => "Start Mileage", class: "form-control input-lg"
            %div{:class => "col-xs-6"}
              = label_tag "End Mileage", nil, :class => 'control-label'
              = text_field_tag "task[ending_mileage]", task['EndingMileage'], :placeholder => "End Mileage", class: "form-control input-lg"
        .row.form-group
          %div{:class => "col-sm-12 col-md-12"}
            = label_tag "Notes", nil, :class => 'control-label'
            = text_area_tag "task[notes]", task['Notes'], :placeholder => "Notes", class: "form-control input-lg"
        .row.form-group
          %div{:class => "col-sm-12 col-md-12"}
            = label_tag "Status", nil, :class => 'control-label'
            / Don't show Completed option if Pickup/Drop Container and no containers yet
            - if (task['InternalTaskType'] == '0' or task['InternalTaskType'] == '1') and task_containers.blank? 
              = select_tag "task[status]", options_for_select(task_status_array_without_completed, task['TaskStatus']), "data-sequence-number" => task['Sequence'], "data-current-value" => task['TaskStatus'], :class => "form-control input-lg task_status"
            - else
              = select_tag "task[status]", options_for_select(task_status_array, task['TaskStatus']), "data-sequence-number" => task['Sequence'], "data-current-value" => task['TaskStatus'], :class => "form-control input-lg task_status"
        .row.form-group
          %div{:class => "col-sm-12 col-md-12"}
            = button_tag(:type => 'submit', :class => 'btn btn-primary btn-lg btn-block task_save_button', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Save"}) do
              Save
  - if task['InternalTaskType'] == '0' or task['InternalTaskType'] == '1'
    .tab-pane.active.containers_tab{:id => "trip_#{task['DispatchTripId']}_task_#{task['Id']}_containers"}
      %br
      -#
        %p
          %button.btn.btn-primary{class: 'find_my_location', "data-google-maps-api-key" => ENV['GOOGLE_MAPS_API_KEY'], "data-user-id" => current_user.id} 
            %i.fa.fa-map-marker
            Find my location
      .location_data
      %a{href: location_path(task['FromLocationId'], address: task['FromLocation'], work_order_number: task['WorkOrderNumber']), target: '_blank'}
        %i.fa.fa-external-link
        Existing Container Lookup
      %div{id: "task_#{task['Id']}_containers", class: 'task_containers'}
        - unless task_containers.blank?
          -# %div.containers_map{id: "task_#{task['Id']}_containers_map", "container-coordinates-hashes-array" => task_containers.map{ |c| Container.latitude_and_longitude_by_container_id(@containers, c['ContainerId'])}.compact.to_json.html_safe}
          - task_containers.each do |container|
            - container_record = Container.find_by_container_id(@containers, container['ContainerId'])
            - container_number = container_record['UserDispatchContainerNumber']
            =# Container.find_by_container_id(@containers, container['ContainerId'])
            - unless (container_record['Latitude'].blank? or container_record['Latitude'] == '0') and (container_record['Longitude'].blank? or container_record['Longitude'] == '0')
              .embed-responsive.embed-responsive-16by9{id: "task_#{task['Id']}_container_map"}
                %iframe{:allowfullscreen => "", :frameborder => "0", :src => Image.google_map("#{container_record['Latitude']}, #{container_record['Longitude']}"), :style => "border:0"}
            %div.row
              %p
                .col-xs-12.col-sm-12.col-md-12
                  %div.panel.panel-primary
                    .panel-body
                      .pull-right 
                        %a{href: '#', id: "container_#{container['ContainerId']}_picture_button", class: 'container_picture_button', 'data-event-code' => task_type_string(task['InternalTaskType']),  'data-event-code-id' => current_user.company.container_event_code_id, "data-container-number" => container_number, "data-customer" => task['Customer'], "data-work-order-number" => task['WorkOrderNumber'], "data-container-id" => container['ContainerId'], style: "text-decoration: none;"}
                          %i.fa.fa-camera.fa-lg
                        &nbsp;
                        &nbsp;
                        - if (container_record['Latitude'].blank? or container_record['Latitude'] == '0') and (container_record['Longitude'].blank? or container_record['Longitude'] == '0')
                          %a{href: '#', id: "container_#{container['ContainerId']}_locate_button", class: 'locate_container', "data-task-id" => task['Id'], "data-container-id" => container['ContainerId'], title: "Save location", style: "text-decoration: none;", "data-google-maps-api-key" => ENV['GOOGLE_MAPS_API_KEY'], "data-user-id" => current_user.id}
                            %i.fa.fa-map-marker.fa-lg
                            %i.fa.fa-spinner.fa-spin.fa-lg{style: 'display:none;'}
                          &nbsp;
                          &nbsp;
                        %a{href: '#', class: 'remove_container', "data-task-id" => task['Id'], "data-container-id" => container['ContainerId'], title: "Remove"}
                          %i.fa.fa-trash.fa-lg.text-danger
                          %i.fa.fa-spinner.fa-spin.fa-lg.text-danger{style: 'display:none;'}
                      = link_to "<i class='fa fa-cube'/></i> #{container_number}".html_safe, container_path(container['ContainerId'], work_order_number: task['WorkOrderNumber']), data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> #{container_number}"}, class: 'trip_button'

                      = form_for ImageFile.new, html: {class: 'new_task_image_file'} do |f|
                        = f.hidden_field :user_id, value: current_user.id
                        = f.hidden_field :yard_id, value: current_yard_id
                        = f.hidden_field :customer_name
                        = f.hidden_field :service_request_number
                        = f.hidden_field :container_number
                        = f.hidden_field :event_code
                        = f.hidden_field :event_code_id
                        %div{:id => 'uploads', :style => 'display:none;'}
                          %p{id: "upload_button", style: "display:block;"}
                            = f.file_field :file, name: "image_file[file]", id: "container_#{container['ContainerId']}_file_upload_button", "data-container-id" => container['ContainerId'], :type => 'file', :class => 'btn-primary btn-block btn-lg', title: "<i class='fa fa-upload'/> Picture".html_safe
                      .picture_loading_spinner{:style => "display:none;", :id => "image_file_spinner"}
                        = image_tag("ajax-loader.gif", :id => "loading_spinner", :alt => "Loading")
                        Uploading ...
                      .row.task_pictures{style: 'margin-top: 5px;'}
                        - Image.api_find_all_by_container_number_and_service_request_number(container_number, task['WorkOrderNumber'], current_user.company, current_yard_id).last(3).each do |image|
                          .col-xs-4.col-sm-4.col-md-4.col-lg-4
                            = link_to image_tag(show_preview_image_image_path(image['CAPTURE_SEQ_NBR']), alt: image['EVENT_CODE'], class: 'thumbnail img-responsive', style: "margin-bottom: 0px;"), image_path(image['CAPTURE_SEQ_NBR'])

                      .clear
                      %script{:id => "template-upload", :type => "text/x-tmpl"}
                        .upload
                          {%=o.name%}
                          .progress.progress-striped
                            .progress-bar{:style => "width: 0%"}
                      %script{:id => "template-download", :type => "text/x-tmpl"}
                        .download
                          {%=o.name%}
                    .panel-footer
                      - unless (container_record['Latitude'].blank? or container_record['Latitude'] == '0') and (container_record['Longitude'].blank? or container_record['Longitude'] == '0')
                        %a{href: "http://www.google.com/maps/place/#{container_record['Latitude']},#{container_record['Longitude']}", target: '_blank'}
                          = "#{container_record['Latitude']}, #{container_record['Longitude']}"
                      - else
                        %a.btn.btn-primary.btn-xs.pin_image{"data-placement" => 'right', "data-html" => "false", "data-toggle" => "tooltip", :role => "button", :tabindex => "0", title: "Click to upload saved picture and store it's location data to this container."}
                          %i.fa.fa-map-pin
                          %i.fa.fa-image


      %p
        = form_tag task_path(task["Id"]), method: 'put', remote: true, :class => "form-horizontal update_task_form", id: "task_#{task['Id']}_form", style: task_containers.blank? ? 'display:block' : 'display:none' do
          =# hidden_field_tag "task[trip_id]", task['DispatchTripId']
          = hidden_field_tag "task[id]", task['Id']
          .row.form-group
            %div{:class => "col-xs-12 col-sm-12 col-md-12"}
              %p
                %a.btn.btn-primary.open_task_container_qrcode_scanner_button{id: "open_task_#{task['Id']}_container_qrcode_scanner_button", href: "#task_#{task['Id']}_qrcode_scanner_modal", "data-target" => "#task_#{task['Id']}_qrcode_scanner_modal", "data-toggle" => "modal"}
                  %i.fa.fa-qrcode
                  Scan Code
              .modal.fade{id: "task_#{task['Id']}_qrcode_scanner_modal", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
                .modal-dialog.modal-sm{:role => "document"}
                  .modal-content
                    .modal-header
                      = link_to "×", '#', :class => "close", "data-dismiss" => "modal"
                      %br
                    .modal-body
                      %video{id: "video_open_task_#{task['Id']}_container_qrcode_scanner_button", :style => "border: 1px solid green; width: 100%; height: auto; controls: false;"}

                    .modal-footer
                      %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close
              =# label_tag "New Container", nil, :class => 'control-label'
              - container_options = (@containers.collect {|container| [ container['UserDispatchContainerNumber'], container['Id'] ] } + @containers.collect {|container| [ container['TagNumber'], container['Id'] ] }).reject{ |container| container.first.blank? }.sort_by { |container| container.first.to_s.downcase }
              -# %p= select_tag "task[container_id]", options_for_select(@containers.collect {|container| [ container['UserDispatchContainerNumber'], container['Id'] ] } + @containers.collect {|container| [ container['TagNumber'], container['Id'] ] }), prompt: 'Search containers', id: "task_#{task['Id']}_container_select", "data-task-id" => "#{task['Id']}", class: "form-control input-lg container_select", style: "width: 100%;", required: true
              %p= select_tag "task[container_id]", options_for_select(container_options), prompt: 'Choose container', id: "task_#{task['Id']}_container_select", "data-task-id" => "#{task['Id']}", class: "form-control input-lg container_select", style: "width: 100%;", required: true
              -#
                .btn-group-vertical.btn-block{"data-toggle" => "buttons"}
                  - @containers.each_with_index do |container, index|
                    %label.btn.btn-lg.btn-default{class: "#{index == 0 ? 'active' : ''}"}
                      = radio_button_tag "task[container_id]", container['Id'], checked: index == 0 ? true : false
                      = container['UserDispatchContainerNumber']
              = hidden_field_tag "task[container_number]"
              = hidden_field_tag "task[customer]", task['Customer']
              = hidden_field_tag "task[work_order_number]", task['WorkOrderNumber']
              = hidden_field_tag "task[InternalTaskType]", task['InternalTaskType']
              -#
                %p= text_field_tag "container[latitude]", nil, :placeholder => "Latitude", class: "form-control input-lg"
                %p= text_field_tag "container[longitude]", nil, :placeholder => "Longitude", class: "form-control input-lg"
          .row.form-group
            %div{:class => "col-xs-12 col-sm-12 col-md-12"}
              = button_tag(:type => 'submit', style: 'display:none;', :class => 'btn btn-primary btn-lg btn-block', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Save Container to Task"}) do
                Save Container to Task
      - if current_user.can_create_container?
        %div{id: "task_#{task['Id']}_create_new_container", style: 'display:none;'}
          = form_tag create_new_container_task_path(task["Id"]), method: 'get', remote: true, :class => "form-horizontal new_container_form", id: "task_#{task['Id']}_create_new_container_form" do
            .row.form-group
              %div{:class => "col-xs-12 col-sm-12 col-md-12"}
                = hidden_field_tag "container[customer]", task['Customer']
                = hidden_field_tag "container[work_order_number]", task['WorkOrderNumber']
                = hidden_field_tag "container[type]", task['InternalTaskType']
                .row.form-group
                  %div{:class => "col-xs-12"}
                    = label_tag "Container Type", nil, :class => 'control-label'
                    = select_tag "container[container_type_id]", options_for_select(@container_types.collect {|ct| [ ct['Type'], ct['Id'] ] }), prompt: 'Select type', class: "form-control input-lg", required: true
                  %div{:class => "col-xs-12"}
                    = label_tag "Container Number", nil, :class => 'control-label'
                    = text_field_tag "container[container_number]", nil, :placeholder => "Container Number", class: "form-control input-lg", required: true
                  %div{:class => "col-xs-12"}
                    = label_tag "Tag Number", nil, :class => 'control-label'
                    = text_field_tag "container[tag_number]", nil, :placeholder => "Tag Number", class: "form-control input-lg", required: true
                  -#
                    %div{:class => "col-xs-12"}
                      = label_tag "Latitude", nil, :class => 'control-label'
                      = text_field_tag "container[latitude]", nil, :placeholder => "Latitude", class: "form-control input-lg"
                    %div{:class => "col-xs-12"}
                      = label_tag "Longitude", nil, :class => 'control-label'
                      = text_field_tag "container[longitude]", nil, :placeholder => "Longitude", class: "form-control input-lg"
                  %div{:class => "col-xs-12"}
                    = label_tag "Description", nil, :class => 'control-label'
                    = text_field_tag "container[description]", nil, :placeholder => "Description", class: "form-control input-lg", required: true
            .row.form-group
              %div{:class => "col-xs-12 col-sm-12 col-md-12"}
                = button_tag(:type => 'submit', :class => 'btn btn-primary btn-lg btn-block', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Create New Container"}) do
                  Create New Container
                %br
                = link_to 'Cancel', '#', onclick: "$('#task_#{task['Id']}_create_new_container').hide(); $('#task_#{task['Id']}_form').show(); $('#task_#{task['Id']}_container_select').select2('val', '');"
            
      - else
        %div{id: "task_#{task['Id']}_create_new_container", style: 'display:none;'}
          %p You are not allowed to create containers
          = link_to 'Search Again', '#', onclick: "$('#task_#{task['Id']}_create_new_container').hide(); $('#task_#{task['Id']}_form').show(); $('#task_#{task['Id']}_container_select').select2('val', '');"

  - if task['InternalTaskType'] == '1' 
    .tab-pane.signature_tab{:id => "trip_#{task['DispatchTripId']}_task_#{task['Id']}_signature"}
      = render partial: "tasks/signature", locals: {task: task, task_containers: task_containers, containers: @containers}

:javascript
  $(".container_select").on("change", function() {
    if($(this).val() == null || $(this).val() == ''){
      $(this).closest('form').find('button[type="submit"]').hide();
    }
    else{
      $(this).closest('form').find('button[type="submit"]').show();
    }
  });